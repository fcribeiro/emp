➜  Downloads helm install --name redis-test stable/redis

NAME:   redis-test
LAST DEPLOYED: Sun May 13 16:06:05 2018
NAMESPACE: default
STATUS: DEPLOYED

RESOURCES:
==> v1/Secret
NAME        TYPE    DATA  AGE
redis-test  Opaque  1     4s

==> v1/Service
NAME               TYPE       CLUSTER-IP     EXTERNAL-IP  PORT(S)   AGE
redis-test-master  ClusterIP  10.98.112.215  <none>       6379/TCP  3s
redis-test-slave   ClusterIP  10.96.237.31   <none>       6379/TCP  3s

==> v1beta1/Deployment
NAME              DESIRED  CURRENT  UP-TO-DATE  AVAILABLE  AGE
redis-test-slave  1        0        0           0          3s

==> v1beta2/StatefulSet
NAME               DESIRED  CURRENT  AGE
redis-test-master  1        1        3s

==> v1/Pod(related)
NAME                               READY  STATUS   RESTARTS  AGE
redis-test-slave-55bffff888-sbztd  0/1    Pending  0         1s
redis-test-master-0                0/1    Pending  0         1s


NOTES:
** Please be patient while the chart is being deployed **
Redis can be accessed via port 6379 on the following DNS names from within your cluster:

redis-test-master.default.svc.cluster.local for read/write operations
redis-test-slave.default.svc.cluster.local for read-only operations


To get your password run:

    export REDIS_PASSWORD=$(kubectl get secret --namespace default redis-test -o jsonpath="{.data.redis-password}" | base64 --decode)

To connect to your Redis server:

1. Run a Redis pod that you can use as a client:

   kubectl run --namespace default redis-test-client --rm --tty -i \
    --env REDIS_PASSWORD=$REDIS_PASSWORD \
   --image docker.io/bitnami/redis:4.0.9 -- bash

2. Connect using the Redis CLI:
   redis-cli -h redis-test-master -a $REDIS_PASSWORD
   redis-cli -h redis-test-slave -a $REDIS_PASSWORD

To connect to your database from outside the cluster execute the following commands:

    export POD_NAME=$(kubectl get pods --namespace default -l "app=redis" -o jsonpath="{.items[0].metadata.name}")
    kubectl port-forward --namespace default $POD_NAME 6379:6379
    redis-cli -h 127.0.0.1 -p 6379 -a $REDIS_PASSWORD

➜  Downloads helm repo add incubator http://storage.googleapis.com/kubernetes-charts-incubator
"incubator" has been added to your repositories
➜  Downloads helm install --name my-kafka incubator/kafka
NAME:   my-kafka
LAST DEPLOYED: Sun May 13 16:06:49 2018
NAMESPACE: default
STATUS: DEPLOYED

RESOURCES:
==> v1/Service
NAME                         TYPE       CLUSTER-IP      EXTERNAL-IP  PORT(S)            AGE
my-kafka-zookeeper           ClusterIP  10.110.66.56    <none>       2181/TCP           4s
my-kafka-zookeeper-headless  ClusterIP  None            <none>       2888/TCP,3888/TCP  3s
my-kafka-kafka               ClusterIP  10.108.201.207  <none>       9092/TCP           3s
my-kafka-kafka-headless      ClusterIP  None            <none>       9092/TCP           3s

==> v1beta1/StatefulSet
NAME                DESIRED  CURRENT  AGE
my-kafka-zookeeper  3        1        3s
my-kafka-kafka      3        1        3s

==> v1beta1/PodDisruptionBudget
NAME                MIN AVAILABLE  MAX UNAVAILABLE  ALLOWED DISRUPTIONS  AGE
my-kafka-zookeeper  2              N/A              0                    3s

==> v1/Pod(related)
NAME                  READY  STATUS   RESTARTS  AGE
my-kafka-zookeeper-0  0/1    Pending  0         3s
my-kafka-kafka-0      0/1    Pending  0         2s


NOTES:
### Connecting to Kafka from inside Kubernetes

You can connect to Kafka by running a simple pod in the K8s cluster like this with a configuration like this:

  apiVersion: v1
  kind: Pod
  metadata:
    name: testclient
    namespace: default
  spec:
    containers:
    - name: kafka
      image: confluentinc/cp-kafka:4.0.1-1
      command:
        - sh
        - -c
        - "exec tail -f /dev/null"

Once you have the testclient pod above running, you can list all kafka
topics with:

  kubectl -n default exec testclient -- /usr/bin/kafka-topics --zookeeper my-kafka-zookeeper:2181 --list

To create a new topic:

  kubectl -n default exec testclient -- /usr/bin/kafka-topics --zookeeper my-kafka-zookeeper:2181 --topic test1 --create --partitions 1 --replication-factor 1

To listen for messages on a topic:

  kubectl -n default exec -ti testclient -- /usr/bin/kafka-console-consumer --bootstrap-server my-kafka-kafka:9092 --topic test1 --from-beginning

To stop the listener session above press: Ctrl+C

To start an interactive message producer session:
  kubectl -n default exec -ti testclient -- /usr/bin/kafka-console-producer --broker-list my-kafka-kafka-headless:9092 --topic test1

To create a message in the above session, simply type the message and press "enter"
To end the producer session try: Ctrl+C
