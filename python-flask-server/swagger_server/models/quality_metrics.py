# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class QualityMetrics(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, metric: str=None, values: str=None):  # noqa: E501
        """QualityMetrics - a model defined in Swagger

        :param metric: The metric of this QualityMetrics.  # noqa: E501
        :type metric: str
        :param values: The values of this QualityMetrics.  # noqa: E501
        :type values: str
        """
        self.swagger_types = {
            'metric': str,
            'values': str
        }

        self.attribute_map = {
            'metric': 'metric',
            'values': 'values'
        }

        self._metric = metric
        self._values = values

    @classmethod
    def from_dict(cls, dikt) -> 'QualityMetrics':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The QualityMetrics of this QualityMetrics.  # noqa: E501
        :rtype: QualityMetrics
        """
        return util.deserialize_model(dikt, cls)

    @property
    def metric(self) -> str:
        """Gets the metric of this QualityMetrics.

        Name of the quality metric  # noqa: E501

        :return: The metric of this QualityMetrics.
        :rtype: str
        """
        return self._metric

    @metric.setter
    def metric(self, metric: str):
        """Sets the metric of this QualityMetrics.

        Name of the quality metric  # noqa: E501

        :param metric: The metric of this QualityMetrics.
        :type metric: str
        """
        if metric is None:
            raise ValueError("Invalid value for `metric`, must not be `None`")  # noqa: E501

        self._metric = metric

    @property
    def values(self) -> str:
        """Gets the values of this QualityMetrics.

        Values of the quality metric  # noqa: E501

        :return: The values of this QualityMetrics.
        :rtype: str
        """
        return self._values

    @values.setter
    def values(self, values: str):
        """Sets the values of this QualityMetrics.

        Values of the quality metric  # noqa: E501

        :param values: The values of this QualityMetrics.
        :type values: str
        """
        if values is None:
            raise ValueError("Invalid value for `values`, must not be `None`")  # noqa: E501

        self._values = values
